// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using auth_sevice.src.Data;

#nullable disable

namespace auth_sevice.src.Migrations
{
  [DbContext(typeof(DataContext))]
  partial class DataContextModelSnapshot : ModelSnapshot
  {
    protected override void BuildModel(ModelBuilder modelBuilder)
    {
#pragma warning disable 612, 618
      modelBuilder
          .HasAnnotation("ProductVersion", "6.0.7")
          .HasAnnotation("Relational:MaxIdentifierLength", 63);

      NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

      modelBuilder.Entity("auth_sevice.src.Models.RefreshToken", b =>
          {
            b.Property<Guid>("Id")
                      .ValueGeneratedOnAdd()
                      .HasColumnType("uuid");

            b.Property<DateTime>("CreatedAt")
                      .HasColumnType("timestamp with time zone");

            b.Property<string>("Token")
                      .IsRequired()
                      .HasColumnType("text");

            b.Property<DateTime>("UpdatedAt")
                      .HasColumnType("timestamp with time zone");

            b.Property<Guid>("UserId")
                      .HasColumnType("uuid");

            b.HasKey("Id");

            b.ToTable("RefreshTokens");
          });

      modelBuilder.Entity("auth_sevice.src.Models.User", b =>
          {
            b.Property<Guid>("Id")
                      .ValueGeneratedOnAdd()
                      .HasColumnType("uuid");

            b.Property<DateTime>("CreatedAt")
                      .HasColumnType("timestamp with time zone");

            b.Property<string>("Password")
                      .IsRequired()
                      .HasColumnType("text");

            b.Property<DateTime>("UpdatedAt")
                      .HasColumnType("timestamp with time zone");

            b.Property<string>("Username")
                      .IsRequired()
                      .HasColumnType("text");

            b.HasKey("Id");

            b.HasIndex("Username")
                      .IsUnique();

            b.ToTable("Users");
          });
#pragma warning restore 612, 618
    }
  }
}
